{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/Reena/Desktop/client/hemster-shopify/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Popover, Button, OptionList, Page, Card, TextStyle, Heading, TextField, Checkbox, Frame, Loading, PageActions, Tag, Layout, Toast } from \"@shopify/polaris\";\nimport { ResourcePicker } from \"@shopify/app-bridge-react\";\nimport * as authService from \"../../services/authService\";\n\nfunction AddProducts(props) {\n  function remove1ele(copySelection, index) {\n    // let copySelection = selectedTag;\n    var result = copySelection.slice(0, index).concat(copySelection.slice(index + 1));\n    return result;\n  } //by price\n\n\n  var _useState = useState(\"\"),\n      priceValue = _useState[0],\n      setPriceValue = _useState[1];\n\n  var _useState2 = useState(false),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var handleChangebyPrice = useCallback(function (newChecked) {\n    return setChecked(newChecked);\n  }, []);\n  var handleTextFieldChange = useCallback(function (value) {\n    return setPriceValue(value);\n  }, []); //loading state\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setIsLoading = _useState3[1];\n\n  var _useState4 = useState(false),\n      isLoadingType = _useState4[0],\n      setIsLoadingType = _useState4[1]; //toast\n\n\n  var _useState5 = useState({\n    isOpen: false,\n    msg: \"\",\n    isErr: false\n  }),\n      active = _useState5[0],\n      setActive = _useState5[1];\n\n  var toastMarkup = active.isOpen ? /*#__PURE__*/_jsx(Toast, {\n    content: active.msg,\n    onDismiss: function onDismiss() {\n      return setActive({\n        isOpen: false,\n        msg: \"\",\n        isErr: false\n      });\n    },\n    error: active.isErr ? true : false\n  }) : null; //list of tags and type\n\n  var _useState6 = useState([]),\n      tags = _useState6[0],\n      setTags = _useState6[1];\n\n  var _useState7 = useState([]),\n      types = _useState7[0],\n      setTypes = _useState7[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    setIsLoadingType(true);\n    authService.getTags().then(function (response) {\n      setIsLoading(false);\n\n      if (response.data && response.data.data && response.data.data.edges && Array.isArray(response.data.data.edges) && response.data.data.edges.length > 0) {\n        var mapped_tags = response.data.data.edges.map(function (edges) {\n          return {\n            label: edges.node,\n            value: edges.node\n          };\n        });\n        setTags(mapped_tags);\n      }\n    })[\"catch\"](function (err) {\n      setIsLoading(false);\n      setActive({\n        isOpen: true,\n        msg: \"Get tags error !\",\n        isErr: true\n      });\n      console.log(\"Error: \", err);\n    });\n    authService.getTypes().then(function (response) {\n      setIsLoadingType(false);\n\n      if (response.data && response.data.data && response.data.data.edges && Array.isArray(response.data.data.edges) && response.data.data.edges.length > 0) {\n        var mapped_types = response.data.data.edges.map(function (edges) {\n          return {\n            label: edges.node,\n            value: edges.node\n          };\n        });\n        setTypes(mapped_types);\n      }\n    })[\"catch\"](function (err) {\n      setIsLoadingType(false);\n      setActive({\n        isOpen: true,\n        msg: \"Get types error !\",\n        isErr: true\n      });\n      console.log(\"Error: \", err);\n    });\n  }, []);\n  useEffect(function () {\n    getInitialProducts();\n  }, []);\n\n  function getInitialProducts() {\n    setIsLoading(true);\n    authService.getAssignFitkit().then(function (response) {\n      setIsLoading(false);\n\n      if (response.data && response.data.status === \"success\") {\n        if (response.data.data) {\n          var _response$data$data = response.data.data,\n              collections = _response$data$data.collections,\n              productIds = _response$data$data.productIds,\n              _tags = _response$data$data.tags,\n              productTypes = _response$data$data.productTypes,\n              byPrice = _response$data$data.byPrice,\n              applyByPrice = _response$data$data.applyByPrice;\n          collections && Array.isArray(collections) && setSelectedColl(collections);\n          productIds && Array.isArray(productIds) && setSelectedProduct(productIds);\n          _tags && Array.isArray(_tags) && setSelectedTag(_tags);\n          productTypes && Array.isArray(productTypes) && setSelectedType(productTypes);\n          applyByPrice && byPrice && setPriceValue(String(byPrice));\n          setChecked(applyByPrice ? true : false);\n        }\n      } else {\n        setActive({\n          isOpen: true,\n          msg: \"Get product details error !\",\n          isErr: true\n        });\n      }\n    })[\"catch\"](function (err) {\n      setIsLoading(false);\n      setActive({\n        isOpen: true,\n        msg: \"Get product details error !\",\n        isErr: true\n      });\n      console.log(\"Error: \", err);\n    });\n  } //tag\n\n\n  var _useState8 = useState(false),\n      popoverActiveTag = _useState8[0],\n      setPopoverActiveTag = _useState8[1];\n\n  var _useState9 = useState([]),\n      selectedTag = _useState9[0],\n      setSelectedTag = _useState9[1];\n\n  var togglePopoverActiveTag = useCallback(function () {\n    return setPopoverActiveTag(function (popoverActiveTag) {\n      return !popoverActiveTag;\n    });\n  }, []);\n\n  var activatorTag = /*#__PURE__*/_jsx(Button, {\n    onClick: togglePopoverActiveTag,\n    disclosure: true,\n    children: \"Product Tags\"\n  });\n\n  function removeSelectedTag(index) {\n    var updatedRes = remove1ele(selectedTag, index);\n    setSelectedTag(updatedRes);\n  }\n\n  var displaySelectedTags = selectedTag && Array.isArray(selectedTag) && selectedTag.length > 0 && selectedTag.map(function (selectedTag, i) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"custom-tag\",\n      children: /*#__PURE__*/_jsx(Tag, {\n        onRemove: function onRemove() {\n          return removeSelectedTag(i);\n        },\n        children: selectedTag\n      })\n    }, i);\n  }); //type\n\n  var _useState10 = useState(false),\n      popoverActiveType = _useState10[0],\n      setPopoverActiveType = _useState10[1];\n\n  var _useState11 = useState([]),\n      selectedType = _useState11[0],\n      setSelectedType = _useState11[1];\n\n  var togglePopoverActiveType = useCallback(function () {\n    return setPopoverActiveType(function (popoverActiveType) {\n      return !popoverActiveType;\n    });\n  }, []);\n\n  var activatorType = /*#__PURE__*/_jsx(Button, {\n    onClick: togglePopoverActiveType,\n    disclosure: true,\n    children: \"Product Types\"\n  });\n\n  function removeSelectedType(index) {\n    var updatedRes = remove1ele(selectedType, index);\n    setSelectedType(updatedRes);\n  }\n\n  var displaySelectedTypes = selectedType && Array.isArray(selectedType) && selectedType.length > 0 && selectedType.map(function (selectedType, i) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"custom-tag\",\n      children: /*#__PURE__*/_jsx(Tag, {\n        onRemove: function onRemove() {\n          return removeSelectedType(i);\n        },\n        children: selectedType\n      })\n    }, i);\n  }); //product\n\n  var _useState12 = useState(false),\n      isOpenProduct = _useState12[0],\n      setIsOpenProduct = _useState12[1];\n\n  var _useState13 = useState([]),\n      selectedProduct = _useState13[0],\n      setSelectedProduct = _useState13[1];\n\n  function handleSelectedProduct(selected) {\n    var selctedColl = selected.selection && Array.isArray(selected.selection) && selected.selection.length > 0 ? selected.selection.map(function (selection) {\n      return selection.id;\n    }) : [];\n    setActive({\n      isOpen: true,\n      msg: \"Click on save to update products.\",\n      isErr: false\n    });\n    setSelectedProduct(selctedColl); // setSelectedProduct(selected);\n\n    setIsOpenProduct(false);\n  }\n\n  function removeSelectedProduct(index) {\n    if (index > -1) {\n      var updatedRes = remove1ele(selectedProduct.selection, index);\n      setSelectedProduct(_objectSpread(_objectSpread({}, selectedProduct), {}, {\n        selection: updatedRes\n      }));\n    }\n  }\n\n  var selectProductProducts = selectedProduct && selectedProduct.selection && Array.isArray(selectedProduct.selection) && selectedProduct.selection.length > 0 && selectedProduct.selection.map(function (selection, i) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"custom-tag\",\n      children: /*#__PURE__*/_jsx(Tag, {\n        onRemove: function onRemove() {\n          return removeSelectedProduct(i);\n        },\n        children: selection.title\n      })\n    }, i);\n  }); //collection\n\n  var _useState14 = useState(false),\n      isOpenColl = _useState14[0],\n      setIsOpenColl = _useState14[1];\n\n  var _useState15 = useState([]),\n      selectedColl = _useState15[0],\n      setSelectedColl = _useState15[1];\n\n  function handleSelectedColl(selected) {\n    var selctedColl = selected.selection && Array.isArray(selected.selection) && selected.selection.length > 0 ? selected.selection.map(function (selection) {\n      return selection.id;\n    }) : [];\n    setActive({\n      isOpen: true,\n      msg: \"click on save to update collection.\",\n      isErr: false\n    });\n    setSelectedColl(selctedColl); // setSelectedColl(selected);\n\n    setIsOpenColl(false);\n  }\n\n  function removeSelectedColl(index) {\n    if (index > -1) {\n      var updatedRes = remove1ele(selectedColl.selection, index);\n      setSelectedColl(_objectSpread(_objectSpread({}, selectedColl), {}, {\n        selection: updatedRes\n      }));\n    }\n  }\n\n  var selectProductColl = selectedColl && selectedColl.selection && Array.isArray(selectedColl.selection) && selectedColl.selection.length > 0 && selectedColl.selection.map(function (selection, i) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"custom-tag\",\n      children: /*#__PURE__*/_jsx(Tag, {\n        onRemove: function onRemove() {\n          return removeSelectedColl(i);\n        },\n        children: selection.title\n      })\n    }, i);\n  }); //handleAssignFitKit\n\n  function handleAssignFitKit() {\n    setIsLoading(true);\n    var data = {\n      collections: selectedColl && selectedColl,\n      productIds: selectedProduct && selectedProduct,\n      tags: selectedTag && selectedTag,\n      productTypes: selectedType && selectedType,\n      applyByPrice: checked,\n      byPrice: priceValue\n    };\n    authService.assignFitkit(data).then(function (response) {\n      setIsLoading(false);\n\n      if (response && response.data && response.data.status === \"success\") {\n        setActive({\n          isOpen: true,\n          msg: \"Successfully saved.\",\n          isErr: false\n        });\n        getInitialProducts();\n      } else {\n        setActive({\n          isOpen: true,\n          msg: \"Something went wrong! Please try again.\",\n          isErr: true\n        });\n      }\n    })[\"catch\"](function (err) {\n      setActive({\n        isOpen: true,\n        msg: \"Something went wrong! Please try again.\",\n        isErr: true\n      });\n      setIsLoading(false);\n      console.log(\"Error\", err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"Polaris-Header-Title heading-mar\",\n      children: \"Add FitKit\"\n    }), /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(Layout.Section, {\n        oneHalf: true,\n        children: /*#__PURE__*/_jsxs(Card, {\n          sectioned: true,\n          children: [/*#__PURE__*/_jsx(TextStyle, {\n            variation: \"strong\",\n            children: \"Select product to add FitKit\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              return setIsOpenProduct(true);\n            },\n            children: \"Choose Product\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), isOpenProduct && /*#__PURE__*/_jsx(ResourcePicker, {\n            resourceType: \"Product\",\n            open: true,\n            onSelection: function onSelection(val) {\n              handleSelectedProduct(val);\n            },\n            showVariants: false,\n            allowMultiple: true,\n            onCancel: function onCancel() {\n              return setIsOpenProduct(false);\n            },\n            initialSelectionIds: selectedProduct && Array.isArray(selectedProduct) && selectedProduct.length > 0 ? selectedProduct.map(function (sp) {\n              return {\n                id: sp\n              };\n            }) : []\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Layout.Section, {\n        oneHalf: true,\n        children: /*#__PURE__*/_jsxs(Card, {\n          sectioned: true,\n          children: [/*#__PURE__*/_jsx(TextStyle, {\n            variation: \"strong\",\n            children: \"Select collection to add FitKit\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Button, {\n            onClick: function onClick() {\n              return setIsOpenColl(true);\n            },\n            children: \"Choose Collection\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), isOpenColl && /*#__PURE__*/_jsx(ResourcePicker, {\n            resourceType: \"Collection\",\n            open: true,\n            onSelection: function onSelection(val) {\n              handleSelectedColl(val);\n            },\n            showVariants: false,\n            allowMultiple: true,\n            onCancel: function onCancel() {\n              return setIsOpenColl(false);\n            },\n            initialSelectionIds: selectedColl && Array.isArray(selectedColl) && selectedColl.length > 0 ? selectedColl.map(function (sp) {\n              return {\n                id: sp\n              };\n            }) : []\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Layout.Section, {\n        children: /*#__PURE__*/_jsxs(Card, {\n          sectioned: true,\n          children: [/*#__PURE__*/_jsx(TextStyle, {\n            variation: \"strong\",\n            children: \"Assign FitKit product tag wise\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Popover, {\n            active: popoverActiveTag,\n            activator: activatorTag,\n            onClose: togglePopoverActiveTag,\n            children: /*#__PURE__*/_jsx(OptionList, {\n              title: \"Manage Fitkit product tag wise\",\n              onChange: setSelectedTag,\n              options: tags,\n              selected: selectedTag,\n              allowMultiple: true\n            })\n          }), displaySelectedTags && displaySelectedTags]\n        })\n      }), /*#__PURE__*/_jsx(Layout.Section, {\n        children: /*#__PURE__*/_jsxs(Card, {\n          sectioned: true,\n          children: [/*#__PURE__*/_jsx(TextStyle, {\n            variation: \"strong\",\n            children: \"Assign FitKit product type wise\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Popover, {\n            active: popoverActiveType,\n            activator: activatorType,\n            onClose: togglePopoverActiveType,\n            children: /*#__PURE__*/_jsx(OptionList, {\n              title: \"Manage Fitkit product type wise\",\n              onChange: setSelectedType,\n              options: types,\n              selected: selectedType,\n              allowMultiple: true\n            })\n          }), displaySelectedTypes && displaySelectedTypes]\n        })\n      }), /*#__PURE__*/_jsx(Layout.Section, {\n        children: /*#__PURE__*/_jsxs(Card, {\n          sectioned: true,\n          children: [/*#__PURE__*/_jsx(TextStyle, {\n            variation: \"strong\",\n            children: \"Apply widget by price\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Checkbox, {\n            label: \"Filter by price?\",\n            checked: checked,\n            onChange: handleChangebyPrice,\n            helpText: \"Show the selected options if the price above (X).\"\n          }), \" \", checked && /*#__PURE__*/_jsx(TextField, {\n            type: \"number\",\n            value: priceValue,\n            onChange: handleTextFieldChange\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Layout.Section, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"action-btns\",\n          children: /*#__PURE__*/_jsx(PageActions, {\n            primaryAction: {\n              disabled: isLoading || isLoadingType,\n              content: \"Save\",\n              onAction: handleAssignFitKit\n            },\n            secondaryActions: [{\n              content: \"Cancel\",\n              destructive: true,\n              onAction: getInitialProducts\n            }]\n          })\n        }), /*#__PURE__*/_jsxs(Frame, {\n          children: [(isLoading || isLoadingType) && /*#__PURE__*/_jsx(Loading, {}), toastMarkup]\n        })]\n      })]\n    })]\n  });\n}\n\nexport default AddProducts;","map":null,"metadata":{},"sourceType":"module"}