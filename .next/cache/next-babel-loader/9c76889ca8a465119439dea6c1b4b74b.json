{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { TextStyle, Card, SettingToggle, Page, Spinner, Tabs, Frame } from \"@shopify/polaris\";\nimport * as authService from \"../services/authService\";\nimport Product from \"./Settings/Product\";\nimport Thankyou from \"./Settings/Thankyou\";\nimport CartPopup from \"./Settings/CartPopup\";\nimport Collection from \"./Settings/Collection\";\nimport Announcement from \"./Settings/Announcement\";\nimport AccountDetails from \"./Settings/AccountDetails\";\n\nfunction Settings(props) {\n  var _useState = useState(true),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoadingApp = _useState2[0],\n      setIsLoadingApp = _useState2[1];\n\n  var contentStatus = active ? \"Disable\" : \"Enable\";\n  var textStatus = active ? \"enabled\" : \"disabled\";\n\n  function handleToggle() {\n    setIsLoadingApp(true);\n    var data = {\n      isAppEnable: !active\n    };\n    authService.enableApp(data).then(function (response) {\n      if (response.data.status === \"success\") {\n        setActive(!active);\n        getAppStatus();\n      }\n\n      setIsLoadingApp(false);\n    })[\"catch\"](function (error) {\n      setIsLoadingApp(false);\n      console.log(\"Error\", error);\n    });\n  }\n\n  useEffect(function () {\n    getAppStatus();\n  }, []);\n\n  var _useState3 = useState(0),\n      selected = _useState3[0],\n      setSelected = _useState3[1];\n\n  var tabs = [{\n    id: \"productPage\",\n    content: \"Product page\"\n  }, {\n    id: \"thankyou\",\n    content: \"Thank you page\"\n  }, {\n    id: \"cartPopUp\",\n    content: \"Cart page Pop-up\"\n  }, {\n    id: \"collection\",\n    content: \"Collection page\"\n  }, {\n    id: \"account_details\",\n    content: \"PDP account details\"\n  }, {\n    id: \"announcementBar\",\n    content: \"Announcement bar\"\n  }];\n\n  function getAppStatus() {\n    setIsLoadingApp(true);\n    authService.getAppStatus().then(function (response) {\n      setIsLoadingApp(false);\n\n      if (response && response.data && response.data.data && response.data.data.shopStatus) {\n        var isAppEnable = response.data.data.shopStatus.isAppEnable;\n        isAppEnable ? setActive(true) : setActive(false);\n      } else {\n        setActive(false);\n      }\n    })[\"catch\"](function (err) {\n      setIsLoadingApp(false);\n      console.log(\"ERROR: \", err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(Page, {\n    title: \"Settings\",\n    children: [/*#__PURE__*/_jsx(SettingToggle, {\n      action: {\n        content: contentStatus,\n        onAction: handleToggle\n      },\n      enabled: active,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"enable-setting\",\n        children: [\"This app is\", \" \", /*#__PURE__*/_jsx(TextStyle, {\n          variation: \"strong\",\n          children: isLoadingApp ? /*#__PURE__*/_jsx(Spinner, {\n            size: \"small\",\n            color: \"teal\"\n          }) : textStatus + \".\"\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Card, {\n      sectioned: true,\n      title: \"Display Settings\",\n      children: /*#__PURE__*/_jsxs(Tabs, {\n        tabs: tabs,\n        selected: selected,\n        onSelect: setSelected,\n        children: [selected === 0 && /*#__PURE__*/_jsx(Product, {}), selected === 1 && /*#__PURE__*/_jsx(Thankyou, {}), selected === 2 && /*#__PURE__*/_jsx(CartPopup, {}), selected === 3 && /*#__PURE__*/_jsx(Collection, {}), selected === 4 && /*#__PURE__*/_jsx(AccountDetails, {}), selected === 5 && /*#__PURE__*/_jsx(Announcement, {})]\n      })\n    })]\n  });\n}\n\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}