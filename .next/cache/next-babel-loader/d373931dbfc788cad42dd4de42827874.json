{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as authService from \"../../services/authService\";\nimport { FormLayout, Button, Form, ButtonGroup, PageActions, Toast, Loading, TextStyle, Spinner, Select, Popover, OptionList } from \"@shopify/polaris\";\n\nfunction AccountDetails(props) {\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1]; //Button enable/disable-------------------------------------\n\n\n  var _useState2 = useState(false),\n      isFirstButtonActive = _useState2[0],\n      setIsFirstButtonActive = _useState2[1];\n\n  var handleFirstButtonClick = useCallback(function () {\n    if (isFirstButtonActive) return;\n    setIsFirstButtonActive(true);\n  }, [isFirstButtonActive]);\n  var handleSecondButtonClick = useCallback(function () {\n    if (!isFirstButtonActive) return;\n    setIsFirstButtonActive(false);\n  }, [isFirstButtonActive]); //toast\n\n  var _useState3 = useState({\n    isOpen: false,\n    msg: \"\",\n    isErr: false\n  }),\n      active = _useState3[0],\n      setActive = _useState3[1]; //////////////////////////////////////////////////\n\n\n  var toastMarkup = active.isOpen ? /*#__PURE__*/_jsx(Toast, {\n    content: active.msg,\n    onDismiss: function onDismiss() {\n      return setActive({\n        isOpen: false,\n        msg: \"\",\n        isErr: false\n      });\n    },\n    error: active.isErr ? true : false\n  }) : null;\n  useEffect(function () {\n    getADSettings();\n  }, []);\n\n  function getADSettings() {\n    setIsLoading(true);\n    authService.getSettingADS().then(function (response) {\n      setIsLoading(false);\n\n      if (response && response.data && response.data.status === \"success\") {\n        if (response.data.data) {\n          var isEnable = response.data.data.isEnable;\n          isEnable ? setIsFirstButtonActive(true) : setIsFirstButtonActive(false);\n        }\n      } else {\n        setActive({\n          isOpen: true,\n          msg: \"Get Setting details error !\",\n          isErr: true\n        });\n      }\n    })[\"catch\"](function (err) {\n      setIsLoading(false);\n      setActive({\n        isOpen: true,\n        msg: \"Get Setting details error !\",\n        isErr: true\n      });\n      console.log(\"ERROR: \", err);\n    });\n  }\n\n  function handleABSettingSave() {\n    setIsLoading(true);\n    var data = {\n      isEnable: isFirstButtonActive\n    };\n    authService.assignSettingADS(data).then(function (response) {\n      setIsLoading(false);\n\n      if (response && response.data && response.data.status === \"success\") {\n        setActive({\n          isOpen: true,\n          msg: \"Successfully saved.\",\n          isErr: false\n        });\n        getADSettings();\n      } else {\n        setActive({\n          isOpen: true,\n          msg: \"Something went wrong! Please try again.\",\n          isErr: true\n        });\n      }\n    })[\"catch\"](function (err) {\n      setIsLoading(false);\n      setActive({\n        isOpen: true,\n        msg: \"Something went wrong! Please try again.\",\n        isErr: true\n      });\n      console.log(\"ERROR\", err);\n    });\n  }\n\n  var account_details = \"<style>\\n  .container-acc {\\n      text-align: left;\\n      width: fit-content;\\n      background: #F4EEED;\\n      border-radius: 4px;\\n      font-family: Montserrat, sans-serif;\\n      font-size: 16px;\\n      padding: 22px 20px;\\n      margin: 10px 0px;\\n      cursor: pointer;\\n  }\\n\\n  .acc-text-1 {\\n      font-weight: 600;\\n      color: #1F1E2C;\\n  }\\n\\n  .acc-text-image {\\n      display: flex;\\n      justify-content: space-between;\\n      margin-top: 5px;\\n  }\\n\\n  .acc-text-2 {\\n      position: relative;\\n      top: 9px;\\n      color: #C1ACA4;\\n      text-decoration: underline;\\n      cursor: pointer;\\n  }\\n\\n  .acc-iamge-2 {\\n      position: relative;\\n      top: 6px;\\n  }\\n</style>\\n\\n<div class=\\\"container-acc\\\" >\\n  <div class=\\\"acc-text-1\\\">\\n      Fit issue? Get free virtual tailoring\\n  </div>\\n  <div class=\\\"acc-text-image\\\">\\n      <span class=\\\"acc-text-2\\\">Book fitting</span>\\n      <img src=\\\"https://merchant.hemster.co/faherty/hemsterlogo.png\\\" class=\\\"acc-iamge-2\\\">\\n  </div>\\n</div>\";\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [isLoading ? /*#__PURE__*/_jsx(\"div\", {\n      className: \"setting-spinner\",\n      children: /*#__PURE__*/_jsx(Spinner, {\n        accessibilityLabel: \"Spinner example\",\n        size: \"large\"\n      })\n    }) : /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(Form, {\n        children: [/*#__PURE__*/_jsx(FormLayout, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"popup-settings\",\n            children: [/*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(TextStyle, {\n              children: \"PDP Account Details\"\n            }), /*#__PURE__*/_jsx(FormLayout.Group, {\n              children: /*#__PURE__*/_jsxs(ButtonGroup, {\n                segmented: true,\n                children: [/*#__PURE__*/_jsx(Button, {\n                  pressed: isFirstButtonActive,\n                  onClick: handleFirstButtonClick,\n                  children: \"Enable\"\n                }), /*#__PURE__*/_jsx(Button, {\n                  pressed: !isFirstButtonActive,\n                  onClick: handleSecondButtonClick,\n                  children: \"Disable\"\n                })]\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(FormLayout, {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: \"Preview:\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: account_details\n            }\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"action-btns\",\n        children: /*#__PURE__*/_jsx(PageActions, {\n          primaryAction: {\n            content: \"Save\",\n            onAction: handleABSettingSave\n          },\n          secondaryActions: [{\n            content: \"Cancel\",\n            destructive: true,\n            onAction: getADSettings\n          }]\n        })\n      })]\n    }), isLoading && /*#__PURE__*/_jsx(Loading, {}), toastMarkup]\n  });\n}\n\nexport default AccountDetails;","map":null,"metadata":{},"sourceType":"module"}