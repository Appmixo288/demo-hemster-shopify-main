{
  "ast": null,
  "code": "import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"next/app\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport { Provider, useAppBridge } from \"@shopify/app-bridge-react\";\nimport { authenticatedFetch } from \"@shopify/app-bridge-utils\";\nimport \"@shopify/polaris/dist/styles.css\";\nimport translations from \"@shopify/polaris/locales/en.json\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport store from \"../client/redux/store\";\nimport \"../client/Css/FitKit.css\";\n\nfunction MyProvider(props) {\n  const app = useAppBridge();\n  const client = new ApolloClient({\n    fetch: authenticatedFetch(app),\n    fetchOptions: {\n      credentials: \"include\"\n    }\n  });\n  const Component = props.Component;\n  return /*#__PURE__*/_jsx(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsx(Component, _objectSpread({}, props))\n  });\n}\n\nclass MyApp extends App {\n  componentDidMount() {\n    if (true) {\n      window.shop = this.props.shopOrigin;\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      shopOrigin\n    } = this.props;\n    console.log(\"_app.js\", API_KEY, shopOrigin);\n    return /*#__PURE__*/_jsx(ReduxProvider, {\n      store: store,\n      children: /*#__PURE__*/_jsx(AppProvider, {\n        i18n: translations,\n        children: /*#__PURE__*/_jsx(Provider, {\n          config: {\n            apiKey: API_KEY,\n            shopOrigin: shopOrigin,\n            forceRedirect: true\n          },\n          children: /*#__PURE__*/_jsx(MyProvider, _objectSpread({\n            Component: Component\n          }, pageProps))\n        })\n      })\n    });\n  }\n\n}\n\nMyApp.getInitialProps = async ({\n  ctx\n}) => {\n  return {\n    shopOrigin: ctx.query.shop\n  };\n};\n\nexport default MyApp;",
  "map": {
    "version": 3,
    "sources": ["c:/Users/Reena/Desktop/client/hemster-shopify/pages/_app.js"],
    "names": [
      "ApolloClient",
      "ApolloProvider",
      "App",
      "AppProvider",
      "Provider",
      "useAppBridge",
      "authenticatedFetch",
      "translations",
      "ReduxProvider",
      "store",
      "MyProvider",
      "props",
      "app",
      "client",
      "fetch",
      "fetchOptions",
      "credentials",
      "Component",
      "MyApp",
      "componentDidMount",
      "window",
      "shop",
      "shopOrigin",
      "render",
      "pageProps",
      "console",
      "log",
      "API_KEY",
      "apiKey",
      "forceRedirect",
      "getInitialProps",
      "ctx",
      "query"
    ],
    "mappings": ";;;;;;;;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,2BAAvC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASH,QAAQ,IAAII,aAArB,QAA0C,aAA1C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,0BAAP;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,GAAG,GAAGP,YAAY,EAAxB;AAEA,QAAMQ,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,IAAAA,KAAK,EAAER,kBAAkB,CAACM,GAAD,CADK;AAE9BG,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAE;AADD;AAFgB,GAAjB,CAAf;AAOA,QAAMC,SAAS,GAAGN,KAAK,CAACM,SAAxB;AAEA,sBACE,KAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA,2BACE,KAAC,SAAD,oBAAeF,KAAf;AADF,IADF;AAKD;;AAED,MAAMO,KAAN,SAAoBhB,GAApB,CAAwB;AACtBiB,EAAAA,iBAAiB,GAAG;AAClB,cAAiC;AAC/BC,MAAAA,MAAM,CAACC,IAAP,GAAc,KAAKV,KAAL,CAAWW,UAAzB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,SAAF;AAAaO,MAAAA,SAAb;AAAwBF,MAAAA;AAAxB,QAAuC,KAAKX,KAAlD;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,OAAvB,EAAgCL,UAAhC;AACA,wBACE,KAAC,aAAD;AAAe,MAAA,KAAK,EAAEb,KAAtB;AAAA,6BACE,KAAC,WAAD;AAAa,QAAA,IAAI,EAAEF,YAAnB;AAAA,+BACE,KAAC,QAAD;AACE,UAAA,MAAM,EAAE;AACNqB,YAAAA,MAAM,EAAED,OADF;AAENL,YAAAA,UAAU,EAAEA,UAFN;AAGNO,YAAAA,aAAa,EAAE;AAHT,WADV;AAAA,iCAOE,KAAC,UAAD;AAAY,YAAA,SAAS,EAAEZ;AAAvB,aAAsCO,SAAtC;AAPF;AADF;AADF,MADF;AAeD;;AAzBqB;;AA4BxBN,KAAK,CAACY,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC,SAAO;AACLT,IAAAA,UAAU,EAAES,GAAG,CAACC,KAAJ,CAAUX;AADjB,GAAP;AAGD,CAJD;;AAKA,eAAeH,KAAf",
    "sourcesContent": [
      "import ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport App from \"next/app\";\r\nimport { AppProvider } from \"@shopify/polaris\";\r\nimport { Provider, useAppBridge } from \"@shopify/app-bridge-react\";\r\nimport { authenticatedFetch } from \"@shopify/app-bridge-utils\";\r\nimport \"@shopify/polaris/dist/styles.css\";\r\nimport translations from \"@shopify/polaris/locales/en.json\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport store from \"../client/redux/store\";\r\nimport \"../client/Css/FitKit.css\";\r\n\r\nfunction MyProvider(props) {\r\n  const app = useAppBridge();\r\n\r\n  const client = new ApolloClient({\r\n    fetch: authenticatedFetch(app),\r\n    fetchOptions: {\r\n      credentials: \"include\",\r\n    },\r\n  });\r\n\r\n  const Component = props.Component;\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Component {...props} />\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nclass MyApp extends App {\r\n  componentDidMount() {\r\n    if (typeof window !== undefined) {\r\n      window.shop = this.props.shopOrigin;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, shopOrigin } = this.props;\r\n    console.log(\"_app.js\", API_KEY, shopOrigin)\r\n    return (\r\n      <ReduxProvider store={store}>\r\n        <AppProvider i18n={translations}>\r\n          <Provider\r\n            config={{\r\n              apiKey: API_KEY,\r\n              shopOrigin: shopOrigin,\r\n              forceRedirect: true,\r\n            }}\r\n          >\r\n            <MyProvider Component={Component} {...pageProps} />\r\n          </Provider>\r\n        </AppProvider>\r\n      </ReduxProvider>\r\n    );\r\n  }\r\n}\r\n\r\nMyApp.getInitialProps = async ({ ctx }) => {\r\n  return {\r\n    shopOrigin: ctx.query.shop,\r\n  };\r\n};\r\nexport default MyApp;\r\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
